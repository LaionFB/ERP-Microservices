# Service RabbitMQ

apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
spec:
  selector:
    app: rabbitmq
  ports:
  - name: messagebus
    port: 5672
    targetPort: 5672
  - name: http
    port: 15672
    targetPort: 15672
  type: LoadBalancer
  
---

# Deployment RabbitMQ

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deploy
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        resources:
          requests:
            cpu: "125m"
            memory: "250Mi"
          limits:
            cpu: "125m"
            memory: "250Mi"
        ports:
        - containerPort: 5672

---

# Service SQL Server

apiVersion: v1
kind: Service
metadata:
  name: sqlserver-service
spec:
  externalName: sqlserver
  selector:
    app: sqlserver
  ports:
  - name: database
    port: 1433
    targetPort: 1433

---

# Deployment SQL Server

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlserver-deploy
  labels:
    app: sqlserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sqlserver
  template:
    metadata:
      labels:
        app: sqlserver
    spec:
      hostname: sqlserver
      containers:
      - name: sqlserver
        image: mcr.microsoft.com/mssql/server
        env:
        - name: SA_PASSWORD
          value: "TCCpurchase01"
        - name: ACCEPT_EULA
          value: "Y"
        ports:
        - containerPort: 1433

---

# Service Redis

apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
  - name: database
    port: 6379
    targetPort: 6379

---

# Deployment Redis

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deploy
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      hostname: redis
      containers:
      - name: redis-container
        image: redis:4-alpine
        resources:
          requests:
            cpu: "125m"
            memory: "250Mi"
          limits:
            cpu: "125m"
            memory: "250Mi"
        ports:
        - containerPort: 6379

---

# Ingress

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: apigateway-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - http:
        paths:
          - path: /api/purchase
            backend:
              serviceName: erp-purchase-service
              servicePort: 80
          - path: /api/inventory
            backend:
              serviceName: erp-inventory-service
              servicePort: 80
          - path: /api/delivery
            backend:
              serviceName: erp-delivery-service
              servicePort: 80
          - path: /
            backend:
              serviceName: erp-frontend-service
              servicePort: 80